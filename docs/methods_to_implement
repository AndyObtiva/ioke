
Text
 format
  test %s
  test %16s
  test %-16s
  test %{, %} for repetition in Common Lisp format style - using each
  test %*{, %} where each element is splatted before used inside  


implement a basic debugger -- in Ioke

iik - interactive Ioke

 each

 break
 continue
 return

- java integration things

doFile
doScript

 add Enumerable stuff

mimics == protos


lower prio
----------

= should check for "foo=" before calling assign, so you can do
  msg next = blah
 instead of setNext

- call initialization on creation
 - defined in terms of aspects

Add freeze/thaw methods

Look seriously at "become"

Common Lisp style "format" for outputting list structures and so on, as in "~{xc ~}"

autoimporter in the style of Io Importer

- something that allows stacking of ground. maybe just a simple "System ground" that is an array. This is used inside of the REPL for example.

 -- think about adding Clojure-style metadata
 -- think for real about pretty printer

aspects:
 - before
 - after
 - surround

resend

would it be interesting to have lexicalblocks be enumerable?

newCounter = method(
  x = 0
  fn(x ++. x))
x = newCounter
x take(10)
x take(3)


