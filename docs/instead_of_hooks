
Instead of hooks - use something similar to Magik's dependent thing
--------------------------------------------------------------------

- It should be fairly trivial to allow an object to have observers that will be notified if that object changes.
- This would serve the same purpose as most of the hooks in Ruby







Ruby hooks, for reference:
--------------------------

- Class#inherited
- Module#extended
- Module#included
- Object#singleton_method_added
- Object#singleton_method_removed
- Object#singleton_method_undefined
- Module#method_added
- Module#method_removed
- Module#method_undefined




Ioke ideas:
-----------

y = Origin mimic
x = Observer mimic
x observe!(y)
x cellAdded = method(name, "added cell #{name}" println)




x = Hook into(y)
x cellAdded = method()
x cellRemoved = method()
x cellChanged = method()
x cellUndefined = method()
x mimicked = method()
x mimicAdded = method()
x mimicRemoved = method()
x mimicsChanged = method()
